"""Add AI agent models

Revision ID: 524819b657ee
Revises: f53fd0a749d4
Create Date: 2025-06-29 16:16:38.809963

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '524819b657ee'
down_revision: Union[str, Sequence[str], None] = 'f53fd0a749d4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('agent_activities', sa.Column('action', sa.String(), nullable=False))
    op.add_column('agent_activities', sa.Column('activity_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('agent_activities', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('agent_activities', 'input_data')
    op.drop_column('agent_activities', 'output_data')
    op.drop_column('agent_activities', 'action_type')
    op.add_column('transcripts', sa.Column('content', sa.Text(), nullable=False))
    op.add_column('transcripts', sa.Column('file_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('transcripts', sa.Column('analysis', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('transcripts', sa.Column('insights', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('transcripts', sa.Column('sentiment_score', sa.Float(), nullable=True))
    op.add_column('transcripts', sa.Column('key_themes', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('transcripts', sa.Column('pain_points', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('transcripts', sa.Column('feature_requests', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('transcripts', sa.Column('error_message', sa.Text(), nullable=True))
    op.drop_column('transcripts', 'problem_statements')
    op.drop_column('transcripts', 'original_content')
    op.drop_column('transcripts', 'file_size')
    op.drop_column('transcripts', 'file_name')
    op.drop_column('transcripts', 'processed_content')
    op.drop_column('transcripts', 'user_stories')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('transcripts', sa.Column('user_stories', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('transcripts', sa.Column('processed_content', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('transcripts', sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('transcripts', sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('transcripts', sa.Column('original_content', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('transcripts', sa.Column('problem_statements', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('transcripts', 'error_message')
    op.drop_column('transcripts', 'feature_requests')
    op.drop_column('transcripts', 'pain_points')
    op.drop_column('transcripts', 'key_themes')
    op.drop_column('transcripts', 'sentiment_score')
    op.drop_column('transcripts', 'insights')
    op.drop_column('transcripts', 'analysis')
    op.drop_column('transcripts', 'file_metadata')
    op.drop_column('transcripts', 'content')
    op.add_column('agent_activities', sa.Column('action_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('agent_activities', sa.Column('output_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('agent_activities', sa.Column('input_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.alter_column('agent_activities', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('agent_activities', 'activity_metadata')
    op.drop_column('agent_activities', 'action')
    # ### end Alembic commands ###
